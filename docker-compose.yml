# version: Déclare la version du schéma Docker Compose utilisée
# Utilisation de la version 3.8
version: '3.8'

# services: Définit les services à déployer
services:
  # symfony: Le service principal de l'application Symfony
  symfony:
    # build: Spécifie le contexte de construction et le Dockerfile à utiliser
    # Le contexte de construction est le répertoire actuel et le Dockerfile est situé dans .devcontainer/Dockerfile
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    # volumes: Monte le répertoire actuel dans le conteneur à /var/www/html
    # Cela permet de partager le code source entre l'hôte et le conteneur, facilitant le développement
    volumes:
      - .:/var/www/html
    # ports: Mappe le port 8080 de l'hôte au port 80 du conteneur
    # Cela permet d'accéder à l'application via http://localhost:8080
    ports:
      - "8080:80"
    # depends_on: Assure que les services db et redis sont démarrés avant le service symfony
    # Cela garantit que la base de données et le cache sont disponibles lorsque l'application démarre
    depends_on:
      - db
      - redis

  # db: Service de base de données MariaDB
  db:
    # image: Utilise l'image officielle MariaDB dernière version
    # Cela permet de déployer une base de données MariaDB
    image: mariadb:latest
    # environment: Définit les variables d'environnement pour configurer la base de données
    # Ces variables sont utilisées par MariaDB pour initialiser la base de données
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    # ports: Mappe le port 3306 de l'hôte au port 3306 du conteneur
    # Cela permet d'accéder à la base de données via http://localhost:3306
    ports:
      - "3306:3306"
    # volumes: Monte un volume Docker pour persister les données de la base de données
    # Cela permet de conserver les données même si le conteneur est recréé
    volumes:
      - db_data:/var/lib/mysql

  # redis: Service de cache Redis
  redis:
    # image: Utilise l'image officielle Redis dernière version
    # Cela permet de déployer un serveur Redis
    image: redis:latest
    # ports: Mappe le port 6379 de l'hôte au port 6379 du conteneur
    # Cela permet d'accéder à Redis via http://localhost:6379
    ports:
      - "6379:6379"

# volumes: Déclare un volume nommé pour persister les données de MariaDB
# Cela permet de stocker les données de manière persistante sur l'hôte
volumes:
  db_data:
